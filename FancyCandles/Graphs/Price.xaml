<UserControl x:Class="FancyCandles.Graphs.Price"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FancyCandles.Graphs"
             xmlns:fp="clr-namespace:FancyPrimitives;assembly=FancyPrimitives"
             xmlns:fc="clr-namespace:FancyCandles" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <fc:CandleDrawingParametersConverter x:Key="candleDrawingParametersConverter"/>
        <fc:TopBottomMarginConverter x:Key="topBottomMarginConverter"/>
        <fc:SquareBoolToVisibilityConverter x:Key="squareBoolToVisibilityConverter"/>
        <fc:IsCandlesLoadingConverter x:Key="isCandlesLoadingConverter" />
        <fc:CrossPriceMarginConverter x:Key="crossPriceMarginConverter" />
        <fc:CrossPriceValueConverter x:Key="crossPriceValueConverter" />
    </UserControl.Resources>
    <!-- Price chart all in one Grid -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="{Binding Path=PriceAxisWidth, Mode=OneWay}"/>
        </Grid.ColumnDefinitions>
        <!-- ============================================================================================================================================================== -->
        <!-- ГРАФИК ЦЕНЫ (Панель со свечками): -->
        <!-- Background for the price chart so that you can touch it up and draw a frame (純粹是 CandleChart 的背景，可以設定顏色) -->
        <Border Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
                BorderBrush="{Binding Path=ChartAreaBorderColor}"
                BorderThickness="1"
                RenderOptions.EdgeMode="Aliased"/>

        <!-- 真正的 Candle 部分，用 Panel.ZIndex="2" 來疊在背景之上-->
        <Grid x:Name="priceChartContainer" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              ClipToBounds="True"
              SizeChanged="OnPanelCandlesContainerSizeChanged" 
              MouseWheel="OnMouseWheel" MouseMove="OnMouseMoveInsideFrameworkElement" Panel.ZIndex="2">
            <!-- You need to fill the entire container with transparent content, otherwise the crosshair does not work: -->
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" Panel.ZIndex="1"/>

            <local:PriceChartElement x:Name="priceChart" 
                CandlesSource="{Binding Path=CandlesSource, Mode=OneWay}"
                Culture="{Binding Path=Culture, Mode=OneWay}"
                MaxNumberOfFractionalDigitsInPrice ="{Binding Path=MaxNumberOfFractionalDigitsInPrice, Mode=OneWay}"
                Indicators="{Binding Path=OverlayIndicators,Mode=OneWay}"
                VisibleCandlesRange="{Binding Path=VisibleCandlesRange, Mode=OneWay}"
                VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}"
                BullishCandleFill="{Binding Path=BullishCandleFill, Mode=OneWay}"
                BearishCandleFill="{Binding Path=BearishCandleFill, Mode=OneWay}" 
                BullishCandleStroke="{Binding Path=BullishCandleStroke, Mode=OneWay}"
                BearishCandleStroke="{Binding Path=BearishCandleStroke, Mode=OneWay}" 
                ToolTipService.PlacementTarget="{Binding ElementName=priceChartContainer}"
                ToolTipService.Placement="Relative"
                RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor">
                <local:PriceChartElement.CandleWidthAndGap>
                    <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                        <Binding Path="CandleWidth" Mode="OneWay"/>
                        <Binding Path="CandleGap" Mode="OneWay"/>
                    </MultiBinding>
                </local:PriceChartElement.CandleWidthAndGap>
                <local:PriceChartElement.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding Path="PriceChartTopMargin" Mode="OneWay"/>
                        <Binding Path="PriceChartBottomMargin" Mode="OneWay"/>
                    </MultiBinding>
                </local:PriceChartElement.Margin>
            </local:PriceChartElement>

            <!-- Legend -->
            <TextBlock TextAlignment="Center" IsHitTestVisible="False"
                       VerticalAlignment="{Binding LegendVerticalAlignment, Mode=OneWay}" 
                       HorizontalAlignment="{Binding LegendHorizontalAlignment, Mode=OneWay}" 
                       Margin="{Binding LegendMargin, Mode=OneWay}"
                       FontFamily="{Binding LegendFontFamily, Mode=OneWay}"
                       FontSize="{Binding LegendFontSize, Mode=OneWay}" 
                       FontStyle="{Binding LegendFontStyle, Mode=OneWay}"
                       Text="{Binding LegendText, Mode=OneWay}" 
                       FontWeight="{Binding LegendFontWeight, Mode=OneWay}" 
                       Foreground="{Binding LegendForeground, Mode=OneWay}" />

            <!-- Horizontal crosshair line: -->
            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="0" 
                    Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                    X2="{Binding ElementName=priceChartContainer, Path=ActualWidth, Mode=OneWay}" 
                    Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!-- vertical crosshair line: -->
            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                    Y1="0" 
                    X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                    Y2="{Binding ElementName=priceChartContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding Path="IsMouseOver" Mode="OneWay" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>
            <!-- Wait indicator -->
            <fp:CircleWaitIndicator Fill="{Binding Path=WaitIndicatorForeground, Mode=OneWay}"
                                IsRunning="{Binding Path=CandlesSource.Count, Converter={StaticResource isCandlesLoadingConverter}, Mode=OneWay}" 
                                Height="30" Width="30"/>

        </Grid>

        <!-- Crosshair price for the price chart (Panel.ZIndex="2" 讓價格標籤可以疊在座標之上)-->
        <Grid Grid.Column="1" Panel.ZIndex="2">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Path="IsCrossPriceLabelVisible" Mode="OneWay"/>
                    <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                </MultiBinding>
            </Grid.Visibility>

            <Border BorderThickness="1" VerticalAlignment="Top" HorizontalAlignment="Left"
                    Background="{Binding CrossPriceLabelBackground, Mode=OneWay}" 
                    BorderBrush="{Binding CrossPriceLabelForeground, Mode=OneWay}"
                    RenderOptions.EdgeMode="Aliased">

                <Border.Margin>
                    <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                        <Binding Path="CurrentMousePosition" Mode="OneWay"/>
                        <Binding Path="PriceAxisTickLabelHeight" Mode="OneWay"/>
                    </MultiBinding>
                </Border.Margin>

                <TextBlock x:Name="fuck" Foreground="{Binding CrossPriceLabelForeground, Mode=OneWay}" FontSize="{Binding PriceAxisTickLabelFontSize, Mode=OneWay}" Margin="5 0 2 0">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource crossPriceValueConverter}">
                            <Binding Path="CurrentMousePosition" Mode="OneWay"/>
                            <Binding ElementName="priceChartContainer" Path="ActualHeight" Mode="OneWay"/>
                            <Binding Path="VisibleCandlesExtremums" Mode="OneWay"/>
                            <Binding Path="PriceChartTopMargin" Mode="OneWay"/>
                            <Binding Path="PriceChartBottomMargin" Mode="OneWay"/>
                            <Binding Path="MaxNumberOfFractionalDigitsInPrice" Mode="OneWay"/>
                            <Binding Path="Culture" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Border>

            <Line X1="0" Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                  X2="3" Y2="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                  Stroke="{Binding CrossPriceLabelForeground, Mode=OneWay}"
                  RenderOptions.EdgeMode="Aliased"/>
        </Grid>
        <!-- ============================================================================================================================================================== -->
        <!-- horizontal scale with price label: -->
        <local:PriceTicksElement Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch"
                                 Culture="{Binding Path=Culture, Mode=OneWay}"
                                 CurrentPrice="{Binding Path=CurrentPrice, Mode=OneWay}"
                                 TickLabelFontFamily="{Binding Path=AxisTickLabelFontFamily, Mode=OneWay}"
                                 TickLabelFontSize="{Binding Path=PriceAxisTickLabelFontSize, Mode=OneWay}"
                                 TickColor="{Binding Path=AxisTickColor, Mode=OneWay}"
                                 IsCurrentPriceLabelVisible="{Binding Path=IsCurrentPriceLabelVisible, Mode=OneWay}"
                                 CurrentPriceLabelBackground="{Binding Path=CurrentPriceLabelBackground, Mode=OneWay}"
                                 CurrentPriceLabelForeground="{Binding Path=CurrentPriceLabelForeground, Mode=OneWay}"
                                 GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
                                 ChartBottomMargin="{Binding Path=PriceChartBottomMargin, Mode=OneWay}"
                                 ChartTopMargin="{Binding Path=PriceChartTopMargin, Mode=OneWay}"
                                 PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
                                 MaxNumberOfFractionalDigitsInPrice ="{Binding Path=MaxNumberOfFractionalDigitsInPrice, Mode=OneWay}"
                                 VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}"
                                 IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
                                 GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
                                 RenderOptions.EdgeMode="Aliased"/>
        <!-- ============================================================================================================================================================== -->
    </Grid>
            
</UserControl>
