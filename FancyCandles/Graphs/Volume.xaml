<UserControl x:Class="FancyCandles.Graphs.Volume"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FancyCandles.Graphs"
             xmlns:fc="clr-namespace:FancyCandles"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <fc:CandleDrawingParametersConverter x:Key="candleDrawingParametersConverter" />
        <fc:TopBottomMarginConverter x:Key="topBottomMarginConverter" />
        <fc:SquareBoolToVisibilityConverter x:Key="squareBoolToVisibilityConverter" />
        <fc:VerticalCrossLineVisibilityConverter x:Key="verticalCrossLineVisibilityConverter" />
        <fc:CrossPriceMarginConverter x:Key="crossPriceMarginConverter" />
        <fc:CrossVolumeConverter x:Key="crossVolumeConverter" />
        <fc:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="{Binding Path=PriceAxisWidth, Mode=OneWay}"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
                BorderBrush="{Binding Path=ChartAreaBorderColor}"
                BorderThickness="1"
                RenderOptions.EdgeMode="Aliased" />

        <Grid x:Name="volumeHistogramContainer" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              MouseWheel="OnMouseWheel" MouseMove="OnMouseMoveInsideVolumeHistogramContainer" Panel.ZIndex="2">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent">
                <Rectangle.ContextMenu>
                    <ContextMenu x:Name="volumeHistogramContextMenu">
                        <MenuItem Header="Settings" Click="OpenCandleChartPropertiesWindow"/>
                        <MenuItem Header="Load Settings" Click="OpenLoadSettingsDialog"/>
                        <MenuItem Header="Save Settings As" Click="OpenSaveSettingsAsDialog"/>
                        <MenuItem Header="Select New Security" Command="{Binding Path=OpenSelectCandleSourceWindowCommand, Mode=OneWay}"/>
                        <MenuItem Header="Time Frame" ItemsSource="{Binding Path=CandlesSourceProvider.SupportedTimeFrames, Mode=OneWay}" 
                                  Command="{Binding Path=ChangeCurrentTimeframeCommand}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="Command" Value="{Binding Path=PlacementTarget.DataContext.ChangeCurrentTimeframeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding Path=.}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                    </ContextMenu>
                </Rectangle.ContextMenu>
            </Rectangle>

            <local:VolumeChartElement 
                CandlesSource="{Binding _chart.CandleSource, Mode=OneWay}"
                Culture="{Binding _chart.Culture, Mode=OneWay}"
                VisibleCandlesRange="{Binding _chart.VisibleCandlesRange, Mode=OneWay}"
                VisibleCandlesExtremums="{Binding _chart.VisibleCandlesExtremums, Mode=OneWay}"
                VolumeBarWidthToCandleWidthRatio="{Binding _chart.VolumeBarWidthToCandleWidthRatio, Mode=OneWay}"
                BullishBarFill="{Binding _chart.BullishVolumeBarFill, Mode=OneWay}"
                BearishBarFill="{Binding _chart.BearishVolumeBarFill, Mode=OneWay}" 
                ToolTipService.PlacementTarget="{Binding ElementName=volumeHistogramContainer, Path=., Mode=OneWay}"
                ToolTipService.Placement="Relative"
                RenderOptions.EdgeMode="Aliased">
                <local:VolumeChartElement.CandleWidthAndGap>
                    <MultiBinding Converter="{StaticResource candleDrawingParametersConverter}">
                        <Binding ElementName="thisUserControl" Path="CandleWidth" Mode="OneWay"/>
                        <Binding ElementName="thisUserControl" Path="CandleGap" Mode="OneWay"/>
                    </MultiBinding>
                </local:VolumeChartElement.CandleWidthAndGap>
                <local:VolumeChartElement.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding ElementName="thisUserControl" Path="VolumeHistogramTopMargin" Mode="OneWay"/>
                        <Binding ElementName="thisUserControl" Path="VolumeHistogramBottomMargin" Mode="OneWay"/>
                    </MultiBinding>
                </local:VolumeChartElement.Margin>
            </local:VolumeChartElement>

            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="0" 
                    Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                    X2="{Binding ElementName=volumeHistogramContainer, Path=ActualWidth, Mode=OneWay}" 
                    Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <Line Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}" StrokeThickness="1"
                    IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased"
                    X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                    Y1="0" 
                    X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                    Y2="{Binding ElementName=volumeHistogramContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Path="IsCrossPriceLabelVisible" Mode="OneWay"/>
                    <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                </MultiBinding>
            </Grid.Visibility>

            <Border BorderThickness="1" VerticalAlignment="Top" HorizontalAlignment="Left"
                    Background="{Binding CrossPriceLabelBackground, Mode=OneWay}" 
                    BorderBrush="{Binding CrossPriceLabelForeground, Mode=OneWay}"
                    RenderOptions.EdgeMode="Aliased">
                <Border.Margin>
                    <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                        <Binding Path="CurrentMousePosition" Mode="OneWay"/>
                        <Binding Path="PriceAxisTickLabelHeight" Mode="OneWay"/>
                    </MultiBinding>
                </Border.Margin>

                <TextBlock Foreground="{Binding CrossPriceLabelForeground, Mode=OneWay}" FontSize="{Binding PriceAxisTickLabelFontSize, Mode=OneWay}" Margin="5 0 2 0">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource crossVolumeConverter}">
                            <Binding Path="CurrentMousePosition" Mode="OneWay"/>
                            <Binding ElementName="volumeHistogramContainer" Path="ActualHeight" Mode="OneWay"/>
                            <Binding Path="VisibleCandlesExtremums" Mode="OneWay"/>
                            <Binding Path="VolumeHistogramTopMargin" Mode="OneWay"/>
                            <Binding Path="VolumeHistogramBottomMargin" Mode="OneWay"/>
                            <Binding Path="Culture" Mode="OneWay"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Border>

            <Line X1="0" Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                  X2="3" Y2="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                  Stroke="{Binding CrossPriceLabelForeground, Mode=OneWay}"
                  RenderOptions.EdgeMode="Aliased"/>
        </Grid>
        <local:VolumeTicksElement Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch"
                                  Culture="{Binding Path=Culture, Mode=OneWay}"
                                  TickLabelFontFamily="{Binding Path=AxisTickLabelFontFamily, Mode=OneWay}"
                                  TickLabelFontSize="{Binding Path=PriceAxisTickLabelFontSize, Mode=OneWay}"
                                  TickColor="{Binding Path=AxisTickColor, Mode=OneWay}"
                                  GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
                                  ChartBottomMargin="{Binding Path=VolumeHistogramBottomMargin, Mode=OneWay}"
                                  ChartTopMargin="{Binding Path=VolumeHistogramTopMargin, Mode=OneWay}"
                                  PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
                                  VisibleCandlesExtremums="{Binding Path=VisibleCandlesExtremums, Mode=OneWay}"
                                  IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
                                  GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
                                  RenderOptions.EdgeMode="Aliased"
                                  Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
    </Grid>
</UserControl>
